/*
 * generated by Xtext
 */
package com.incquerylabs.uml.ralf;

import org.eclipse.xtext.conversion.IValueConverterService;
import org.eclipse.xtext.linking.ILinkingService;
import org.eclipse.xtext.naming.IQualifiedNameConverter;
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;

import com.google.inject.name.Names;
import com.incquerylabs.uml.ralf.resource.ReducedAlfLanguageResource;
import com.incquerylabs.uml.ralf.scoping.ReducedAlfLanguageGlobalScopeProvider;
import com.incquerylabs.uml.ralf.scoping.ReducedAlfLanguageImportedNamespaceAwareScopeProvider;
import com.incquerylabs.uml.ralf.scoping.ReducedAlfLanguageLinkingService;
import com.incquerylabs.uml.ralf.scoping.ReducedAlfLanguageQualifiedNameConverter;
import com.incquerylabs.uml.ralf.scoping.ReducedAlfLanguageResourceDescriptionStrategy;
import com.incquerylabs.uml.ralf.scoping.context.IUMLContextProviderAccess;
import com.incquerylabs.uml.ralf.scoping.context.ResourceBasedUMLContextProviderAccess;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class ReducedAlfLanguageRuntimeModule extends AbstractReducedAlfLanguageRuntimeModule {
	
    public Class<? extends IDefaultResourceDescriptionStrategy> bindIDefaultResourceDescriptionStrategy() {
        return ReducedAlfLanguageResourceDescriptionStrategy.class;
    }
    
    @Override
    public Class<? extends IValueConverterService> bindIValueConverterService() {
		return ReducedAlfLanguageValueConverters.class;
	}
    
    public Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
    	return ReducedAlfLanguageQualifiedNameConverter.class;
    }

	@Override
	public Class<? extends XtextResource> bindXtextResource() {
		return ReducedAlfLanguageResource.class;
	}

	@Override
	public Class<? extends ILinkingService> bindILinkingService() {
		return ReducedAlfLanguageLinkingService.class;
	}
    
	public Class<? extends IUMLContextProviderAccess> bindIUMLContextProviderAccess() {
		return ResourceBasedUMLContextProviderAccess.class;
	}
	
	@Override
	public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return ReducedAlfLanguageGlobalScopeProvider.class;
	}
	
	@Override
	public void configureIScopeProviderDelegate(com.google.inject.Binder binder) {
		binder.bind(IScopeProvider.class).
			annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).
			to(ReducedAlfLanguageImportedNamespaceAwareScopeProvider.class);
	}
}
